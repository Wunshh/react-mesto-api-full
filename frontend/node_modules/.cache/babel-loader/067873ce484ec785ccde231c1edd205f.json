{"ast":null,"code":"import{useRef,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function InfoTooltip(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,message=_ref.message,onCloseOverlayClick=_ref.onCloseOverlayClick,onCloseKeyDown=_ref.onCloseKeyDown;var popupLinkRef=useRef();useEffect(function(){var currentPopup=popupLinkRef.current;currentPopup.addEventListener(\"click\",onCloseOverlayClick);document.addEventListener(\"keydown\",onCloseKeyDown);return function(){document.removeEventListener(\"keydown\",onCloseKeyDown);currentPopup.removeEventListener(\"click\",onCloseOverlayClick);};},[onClose]);return/*#__PURE__*/_jsx(\"div\",{className:\"popup \".concat(isOpen&&\"popup_open\",\" popup_type_image\\\"\"),ref:popupLinkRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup__container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"popup__close-button\",onClick:onClose}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"form__image\",src:message.image,alt:\"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsx(\"p\",{className:\"form__subtitle\",children:message.text})]})]})});}","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/InfoTooltip.js"],"names":["useRef","useEffect","InfoTooltip","isOpen","onClose","message","onCloseOverlayClick","onCloseKeyDown","popupLinkRef","currentPopup","current","addEventListener","document","removeEventListener","image","text"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,OAAlC,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,MAAwF,IAAjEC,CAAAA,MAAiE,MAAjEA,MAAiE,CAAzDC,OAAyD,MAAzDA,OAAyD,CAAhDC,OAAgD,MAAhDA,OAAgD,CAAtCC,mBAAsC,MAAtCA,mBAAsC,CAAjBC,cAAiB,MAAjBA,cAAiB,CAEnG,GAAMC,CAAAA,YAAY,CAAGR,MAAM,EAA3B,CAEAC,SAAS,CAAC,UAAM,CACZ,GAAMQ,CAAAA,YAAY,CAAGD,YAAY,CAACE,OAAlC,CAEAD,YAAY,CAACE,gBAAb,CAA8B,OAA9B,CAAuCL,mBAAvC,EACAM,QAAQ,CAACD,gBAAT,CAA0B,SAA1B,CAAqCJ,cAArC,EACA,MAAM,WAAM,CACRK,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,CAAwCN,cAAxC,EACAE,YAAY,CAACI,mBAAb,CAAiC,OAAjC,CAA0CP,mBAA1C,EACH,CAHD,CAIH,CATQ,CASN,CAACF,OAAD,CATM,CAAT,CAWA,mBACI,YAAK,SAAS,iBAAWD,MAAM,EAAI,YAArB,uBAAd,CACI,GAAG,CAAEK,YADT,uBAGI,aAAK,SAAS,CAAC,kBAAf,wBACI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,qBAAhC,CAAsD,OAAO,CAAEJ,OAA/D,EADJ,cAEI,cAAM,SAAS,CAAC,MAAhB,wBACI,YAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAEC,OAAO,CAACS,KAA1C,CAAiD,GAAG,CAAC,oEAArD,EADJ,cAEI,UAAG,SAAS,CAAC,gBAAb,UAA+BT,OAAO,CAACU,IAAvC,EAFJ,GAFJ,GAHJ,EADJ,CAaH","sourcesContent":["import { useRef, useEffect } from \"react\";\n\nexport default function InfoTooltip({ isOpen, onClose, message,  onCloseOverlayClick, onCloseKeyDown}) {\n\n    const popupLinkRef = useRef();\n\n    useEffect(() => {\n        const currentPopup = popupLinkRef.current;\n\n        currentPopup.addEventListener(\"click\", onCloseOverlayClick);\n        document.addEventListener(\"keydown\", onCloseKeyDown);\n        return() => {\n            document.removeEventListener(\"keydown\", onCloseKeyDown);\n            currentPopup.removeEventListener(\"click\", onCloseOverlayClick);\n        }\n    }, [onClose]);\n\n    return(\n        <div className={`popup ${isOpen && \"popup_open\"} popup_type_image\"`} \n            ref={popupLinkRef}        \n        >\n            <div className=\"popup__container\">\n                <button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\n                <form className=\"form\">\n                    <img className=\"form__image\" src={message.image} alt=\"Авторизация\"></img>\n                    <p className=\"form__subtitle\">{message.text}</p>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}