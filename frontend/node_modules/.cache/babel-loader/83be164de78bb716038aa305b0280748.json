{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\n// import { useState, useContext, useEffect} from 'react';\n// import { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n// import PopupWithForm from \"./PopupWithForm.js\";\n// export default function EditProfilePopup({ isOpen, onClose, onUpdateUser}) {\n//     const [name, setName] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n//     const currentUser = useContext(CurrentUserContext);\n//     function handleNameChange(evt) {\n//       setName(evt.target.value);\n//     }\n//     function handleDescriptionChange(evt) {\n//       setDescription(evt.target.value);\n//     }\n//     useEffect(() => {\n//         setName(currentUser.name);\n//         setDescription(currentUser.about);\n//       }, [currentUser]);\n//     function handleSubmit(evt) {\n//       evt.preventDefault();\n//       onUpdateUser({\n//         name: name,\n//         about: description,\n//       });\n//     }\n//     return(\n//         <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n//             <input \n//               className=\"form__user-info form__user-info_user_name form__input\" \n//               id=\"input-name\" name=\"name\" value={name || \"\"} \n//               onChange={handleNameChange} \n//               type=\"text\" \n//               placeholder=\"Имя\" \n//               minLength=\"2\" \n//               maxLength=\"40\"\n//             />\n//             <span className=\"form__input-error input-name-error\"></span>\n//             <input \n//               className=\"form__user-info form__user-info_user_job form__input\" \n//               id=\"input-job\" \n//               name=\"description\" \n//               value={description || \"\"} \n//               onChange={handleDescriptionChange} \n//               type=\"text\" \n//               placeholder=\"О себе\" \n//               minLength=\"2\" \n//               maxLength=\"200\"\n//             />\n//             <span className=\"form__input-error input-name-error\"></span>\n//         </PopupWithForm>\n//     );\n// }\nimport { useState, useContext, useEffect } from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser\n}) {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      description: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(2, \"Текст должен быть не короче 2 симвовлов\").max(40).required(\"Вы пропустили это поле\"),\n      description: Yup.string().min(2, \"Текст должен быть не короче 2 симвовлов\").max(200).required(\"Вы пропустили это поле\")\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const currentUser = useContext(CurrentUserContext);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form__user-info form__user-info_user_name form__input\",\n      id: \"input-name\",\n      name: \"name\",\n      value: name || \"\",\n      onChange: handleNameChange,\n      type: \"text\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__input-error\",\n      children: formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form__error_visible input-name-error\",\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 57\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form__user-info form__user-info_user_job form__input\",\n      id: \"input-job\",\n      name: \"description\",\n      value: description || \"\",\n      onChange: handleDescriptionChange,\n      type: \"text\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__input-error input-name-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditProfilePopup, \"5X8pKUTNVk8pttyh4aPKFozQ7T0=\", false, function () {\n  return [useFormik];\n});\n\n_c = EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/EditProfilePopup.js"],"names":["useState","useContext","useEffect","CurrentUserContext","PopupWithForm","useFormik","Yup","EditProfilePopup","isOpen","onClose","onUpdateUser","formik","initialValues","name","description","validationSchema","object","string","min","max","required","onSubmit","values","alert","JSON","stringify","setName","setDescription","currentUser","handleNameChange","evt","target","value","handleDescriptionChange","about","handleSubmit","preventDefault","touched","errors"],"mappings":"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","sourcesContent":["// import { useState, useContext, useEffect} from 'react';\n// import { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n// import PopupWithForm from \"./PopupWithForm.js\";\n\n// export default function EditProfilePopup({ isOpen, onClose, onUpdateUser}) {\n\n//     const [name, setName] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n\n//     const currentUser = useContext(CurrentUserContext);\n\n//     function handleNameChange(evt) {\n//       setName(evt.target.value);\n//     }\n\n//     function handleDescriptionChange(evt) {\n//       setDescription(evt.target.value);\n//     }\n\n//     useEffect(() => {\n//         setName(currentUser.name);\n//         setDescription(currentUser.about);\n//       }, [currentUser]);\n\n\n//     function handleSubmit(evt) {\n//       evt.preventDefault();\n      \n//       onUpdateUser({\n//         name: name,\n//         about: description,\n//       });\n//     }\n\n//     return(\n//         <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n//             <input \n//               className=\"form__user-info form__user-info_user_name form__input\" \n//               id=\"input-name\" name=\"name\" value={name || \"\"} \n//               onChange={handleNameChange} \n//               type=\"text\" \n//               placeholder=\"Имя\" \n//               minLength=\"2\" \n//               maxLength=\"40\"\n//             />\n//             <span className=\"form__input-error input-name-error\"></span>\n//             <input \n//               className=\"form__user-info form__user-info_user_job form__input\" \n//               id=\"input-job\" \n//               name=\"description\" \n//               value={description || \"\"} \n//               onChange={handleDescriptionChange} \n//               type=\"text\" \n//               placeholder=\"О себе\" \n//               minLength=\"2\" \n//               maxLength=\"200\"\n//             />\n//             <span className=\"form__input-error input-name-error\"></span>\n//         </PopupWithForm>\n//     );\n// }\n\nimport { useState, useContext, useEffect} from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function EditProfilePopup({ isOpen, onClose, onUpdateUser}) {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      description: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(2, \"Текст должен быть не короче 2 симвовлов\")\n        .max(40)\n        .required(\"Вы пропустили это поле\"), \n      description: Yup.string()\n        .min(2, \"Текст должен быть не короче 2 симвовлов\")\n        .max(200)\n        .required(\"Вы пропустили это поле\"),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const currentUser = useContext(CurrentUserContext);\n\n    function handleNameChange(evt) {\n      setName(evt.target.value);\n    }\n\n    function handleDescriptionChange(evt) {\n      setDescription(evt.target.value);\n    }\n\n    useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n      }, [currentUser]);\n\n\n    function handleSubmit(evt) {\n      evt.preventDefault();\n      \n      onUpdateUser({\n        name: name,\n        about: description,\n      });\n    }\n\n    return(\n      <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n        <input \n          className=\"form__user-info form__user-info_user_name form__input\" \n          id=\"input-name\" name=\"name\" value={name || \"\"} \n          onChange={handleNameChange} \n          type=\"text\" \n          placeholder=\"Имя\" \n          minLength=\"2\" \n          maxLength=\"40\"\n        />\n        <div className=\"form__input-error\">\n          {formik.touched.name && formik.errors.name ? (<span className={\"form__error_visible input-name-error\"}>{formik.errors.name}</span>) : null}\n        </div>\n        <input \n          className=\"form__user-info form__user-info_user_job form__input\" \n          id=\"input-job\" \n          name=\"description\" \n          value={description || \"\"} \n          onChange={handleDescriptionChange} \n          type=\"text\" \n          placeholder=\"О себе\" \n          minLength=\"2\" \n          maxLength=\"200\"\n        />\n        <span className=\"form__input-error input-name-error\"></span>\n      </PopupWithForm>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}