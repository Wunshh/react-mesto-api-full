{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  const [currentUser, setCurrentUser] = useState(\"\");\n  useEffect(() => {\n    api.getUserInfoFromServer().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n  }\n\n  function handleUpdateUser() {\n    api.updateUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"new-card\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        buttonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__user-info form__user-info_photo_name\",\n          id: \"input-title\",\n          name: \"name\",\n          type: \"text\",\n          required: true,\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          minLength: \"1\",\n          maxLength: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form__input-error input-title-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__user-info form__user-info_photo_src\",\n          id: \"input-src\",\n          name: \"link\",\n          type: \"url\",\n          required: true,\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form__input-error input-src-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-image\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonText: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y2JNRl6WHsIEJ2yFcmZSQ5tsNIo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/App.js"],"names":["useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","getUserInfoFromServer","then","res","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","updateUserData"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDb,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACc,sBAAD,EAAyBC,yBAAzB,IAAsDf,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACgB,mBAAD,EAAsBC,sBAAtB,IAAgDjB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC;AAACoB,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,GAAG,CAACiB,qBAAJ,GACCC,IADD,CACMC,GAAG,IAAI;AACTH,MAAAA,cAAc,CAACG,GAAD,CAAd;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOD,GARM,EAQJ,EARI,CAAT;;AAUA,WAASG,qBAAT,GAAiC;AAC7BlB,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAED,WAASmB,sBAAT,GAAkC;AAC9BjB,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH;;AAED,WAASkB,mBAAT,GAA+B;AAC3BhB,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;;AAED,WAASiB,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BhB,IAAAA,eAAe,CAACgB,IAAD,CAAf;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBvB,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,eAAe,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE;AAAjB,KAAD,CAAf;AACH;;AAED,WAASgB,gBAAT,GAA4B;AACxB9B,IAAAA,GAAG,CAAC+B,cAAJ,GACCb,IADD,CACMC,GAAG,IAAI;AACTH,MAAAA,cAAc,CAACG,GAAD,CAAd;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOAQ,IAAAA,cAAc;AACjB;;AAEH,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAId,WAAtC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,aAAa,EAAEU,sBAArB;AAA6C,QAAA,UAAU,EAAEC,mBAAzD;AAA+E,QAAA,YAAY,EAAEF,qBAA7F;AAAoH,QAAA,WAAW,EAAEG;AAAjI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI,QAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEpB,sBAA1B;AAAkD,QAAA,OAAO,EAAEsB,cAA3D;AAA2E,QAAA,YAAY,EAAEC;AAAzF;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAEzB,qBAAzB;AAAgD,QAAA,OAAO,EAAEwB;AAAzD;AAAA;AAAA;AAAA;AAAA,cANJ,eAQQ,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,UAApB;AAA+B,QAAA,KAAK,EAAC,+DAArC;AAAmD,QAAA,UAAU,EAAC,4CAA9D;AAAwE,QAAA,MAAM,EAAEpB,mBAAhF;AAAqG,QAAA,OAAO,EAAEoB,cAA9G;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,4CAAjB;AAA8D,UAAA,EAAE,EAAC,aAAjE;AAA+E,UAAA,IAAI,EAAC,MAApF;AAA2F,UAAA,IAAI,EAAC,MAAhG;AAAuG,UAAA,QAAQ,MAA/G;AAAgH,UAAA,WAAW,EAAC,kDAA5H;AAAuI,UAAA,SAAS,EAAC,GAAjJ;AAAqJ,UAAA,SAAS,EAAC;AAA/J;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,SAAS,EAAC,2CAAjB;AAA6D,UAAA,EAAE,EAAC,WAAhE;AAA4E,UAAA,IAAI,EAAC,MAAjF;AAAwF,UAAA,IAAI,EAAC,KAA7F;AAAmG,UAAA,QAAQ,MAA3G;AAA4G,UAAA,WAAW,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARR,eAeQ,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,cAApB;AAAmC,QAAA,KAAK,EAAC,0DAAzC;AAAuD,QAAA,UAAU,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,cAfR,eAiBQ,QAAC,UAAD;AAAY,QAAA,IAAI,EAAElB,YAAlB;AAAgC,QAAA,OAAO,EAAEkB;AAAzC;AAAA;AAAA;AAAA;AAAA,cAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA3EQzB,G;;KAAAA,G;AA6ET,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\"; \nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\n\nfunction App() {\n    \n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({name: \"\", link: \"\"});\n    const [currentUser, setCurrentUser] = useState(\"\");\n\n    useEffect(() => {\n        api.getUserInfoFromServer()\n        .then(res => {\n            setCurrentUser(res);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n      }, []);\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n     \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard({name: \"\", link: \"\"});\n    }\n\n    function handleUpdateUser() {\n        api.updateUserData()\n        .then(res => {\n            setCurrentUser(res)\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n        closeAllPopups();\n    }\n\n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n        <div className=\"App page\">\n            <Header />\n            <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}  onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n            <Footer />\n\n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n\n                <PopupWithForm name=\"new-card\" title=\"Новое место\" buttonText=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n                    <input className=\"form__user-info form__user-info_photo_name\" id=\"input-title\" name=\"name\" type=\"text\" required placeholder=\"Название\" minLength=\"1\" maxLength=\"30\"/>\n                    <span className=\"form__input-error input-title-error\"></span>\n                    <input className=\"form__user-info form__user-info_photo_src\" id=\"input-src\" name=\"link\" type=\"url\" required placeholder=\"Ссылка на картинку\" />\n                    <span className=\"form__input-error input-src-error\"></span>\n                </PopupWithForm>\n\n                <PopupWithForm name=\"delete-image\" title=\"Вы уверены?\" buttonText=\"Да\" />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        </div>\n    </CurrentUserContext.Provider>    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}