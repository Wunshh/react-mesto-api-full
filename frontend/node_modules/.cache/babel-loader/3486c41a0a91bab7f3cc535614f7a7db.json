{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/InfoTooltip.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InfoTooltip({\n  isOpen,\n  onClose,\n  message,\n  onCloseOverlayClick,\n  onCloseKeyDown\n}) {\n  _s();\n\n  const popupLinkRef = useRef();\n  useEffect(() => {\n    const currentPopup = popupLinkRef.current;\n    currentPopup.addEventListener(\"click\", onCloseOverlayClick);\n    document.addEventListener(\"keydown\", onCloseKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", onCloseKeyDown);\n      currentPopup.removeEventListener(\"click\", onCloseOverlayClick);\n    };\n  }, [onClose, onCloseKeyDown, onCloseOverlayClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${isOpen && \"popup_open\"} popup_type_image\"`,\n    ref: popupLinkRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"popup__close-button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"form__image\",\n          src: message.image,\n          alt: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form__subtitle\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InfoTooltip, \"OWG2dLwnge6UuDIwZR9k3dO2yTs=\");\n\n_c = InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/InfoTooltip.js"],"names":["useRef","useEffect","InfoTooltip","isOpen","onClose","message","onCloseOverlayClick","onCloseKeyDown","popupLinkRef","currentPopup","current","addEventListener","document","removeEventListener","image","text"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,OAAnB;AAA6BC,EAAAA,mBAA7B;AAAkDC,EAAAA;AAAlD,CAArB,EAAwF;AAAA;;AAEnG,QAAMC,YAAY,GAAGR,MAAM,EAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,YAAY,GAAGD,YAAY,CAACE,OAAlC;AAEAD,IAAAA,YAAY,CAACE,gBAAb,CAA8B,OAA9B,EAAuCL,mBAAvC;AACAM,IAAAA,QAAQ,CAACD,gBAAT,CAA0B,SAA1B,EAAqCJ,cAArC;AACA,WAAM,MAAM;AACRK,MAAAA,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,EAAwCN,cAAxC;AACAE,MAAAA,YAAY,CAACI,mBAAb,CAAiC,OAAjC,EAA0CP,mBAA1C;AACH,KAHD;AAIH,GATQ,EASN,CAACF,OAAD,EAAUG,cAAV,EAA0BD,mBAA1B,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAG,SAAQH,MAAM,IAAI,YAAa,oBAAhD;AACI,IAAA,GAAG,EAAEK,YADT;AAAA,2BAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,qBAAhC;AAAsD,QAAA,OAAO,EAAEJ;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAEC,OAAO,CAACS,KAA1C;AAAiD,UAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA,oBAA+BT,OAAO,CAACU;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA5BuBb,W;;KAAAA,W","sourcesContent":["import { useRef, useEffect } from \"react\";\n\nexport default function InfoTooltip({ isOpen, onClose, message,  onCloseOverlayClick, onCloseKeyDown}) {\n\n    const popupLinkRef = useRef();\n\n    useEffect(() => {\n        const currentPopup = popupLinkRef.current;\n\n        currentPopup.addEventListener(\"click\", onCloseOverlayClick);\n        document.addEventListener(\"keydown\", onCloseKeyDown);\n        return() => {\n            document.removeEventListener(\"keydown\", onCloseKeyDown);\n            currentPopup.removeEventListener(\"click\", onCloseOverlayClick);\n        }\n    }, [onClose, onCloseKeyDown, onCloseOverlayClick]);\n\n    return(\n        <div className={`popup ${isOpen && \"popup_open\"} popup_type_image\"`} \n            ref={popupLinkRef}        \n        >\n            <div className=\"popup__container\">\n                <button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\n                <form className=\"form\">\n                    <img className=\"form__image\" src={message.image} alt=\"Авторизация\"></img>\n                    <p className=\"form__subtitle\">{message.text}</p>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}