{"ast":null,"code":"export var BASE_URL=\"https://api.last.nomoredomains.work\";export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',credentials:'include',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});};export var getContent=function getContent(jwt){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',credentials:'include',headers:{'Accept':'application/json','Content-Type':'application/json','Set-Cookie':\"\".concat(jwt)}}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}).then(function(data){return data;});};","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/utils/authUser.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","authorize","credentials","getContent","jwt","data"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,qCAAjB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,KAAX,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQD,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACD,CAbM,CAAP,CAcD,CAfI,CAiBL,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACf,QAAD,CAAWC,KAAX,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCa,WAAW,CAAE,SAFoB,CAGjCZ,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAHwB,CAOjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CAP2B,CAAvB,CAAL,CASNO,IATM,CASD,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACD,CAdM,CAAP,CAeD,CAhBM,CAkBP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CACjC,MAAOhB,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCa,WAAW,CAAE,SAFsB,CAGnCZ,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,uBAAiBc,GAAjB,CAHO,CAH0B,CAAzB,CAAL,CASNV,IATM,CASD,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACD,CAdM,EAeNN,IAfM,CAeD,SAAAW,IAAI,QAAIA,CAAAA,IAAJ,EAfH,CAAP,CAgBD,CAjBM","sourcesContent":["export const BASE_URL = \"https://api.last.nomoredomains.work\";\n\nexport const register = (password, email) => {\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({password, email})\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  export const authorize = (password, email) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({password, email})\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  \n  export const getContent = (jwt) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Set-Cookie': `${jwt}`,\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    })\n    .then(data => data);\n  }"]},"metadata":{},"sourceType":"module"}