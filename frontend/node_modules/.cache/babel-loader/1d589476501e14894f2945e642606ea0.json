{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    Promise.all([api.getInitialCards(), api.getUserInfoFromServer()]).then(([dataCards, dataUser]) => {\n      setCards(dataCards);\n      setCurrentUser(dataUser);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => {\n      return item._id === currentUser._id;\n    });\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.handlerdeleteCards(card._id).catch(err => {\n      console.log(err);\n    });\n    setCards(cards => cards.filter(state => state._id !== card._id));\n  }\n\n  function handleAddPlaceSubmit(item) {\n    api.postCards(item).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n  }\n\n  function handleUpdateUser(item) {\n    api.updateUserData(item).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(item) {\n    api.updateUserAvatar(item).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelite: handleCardDelete,\n        onCards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), isEditProfilePopupOpen && /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), isEditAvatarPopupOpen && /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-image\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonText: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HsY/btZEU9i+RysohZp9xzVepBE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/App.js"],"names":["useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","Promise","all","getInitialCards","getUserInfoFromServer","then","dataCards","dataUser","catch","err","console","log","handleCardLike","card","isLiked","likes","some","item","_id","changeLikeCardStatus","newCard","map","c","handleCardDelete","handlerdeleteCards","filter","state","handleAddPlaceSubmit","postCards","closeAllPopups","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateUser","updateUserData","res","handleUpdateAvatar","updateUserAvatar"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDd,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACe,sBAAD,EAAyBC,yBAAzB,IAAsDhB,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACiB,mBAAD,EAAsBC,sBAAtB,IAAgDlB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC;AAACqB,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACrB,GAAG,CAACsB,eAAJ,EAAD,EAAwBtB,GAAG,CAACuB,qBAAJ,EAAxB,CAAZ,EACCC,IADD,CACM,CAAC,CAACC,SAAD,EAAYC,QAAZ,CAAD,KAA2B;AAC7BP,MAAAA,QAAQ,CAACM,SAAD,CAAR;AACAR,MAAAA,cAAc,CAACS,QAAD,CAAd;AACH,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,WAASG,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAiBC,IAAD,IAAU;AACtC,aAAOA,IAAI,CAACC,GAAL,KAAarB,WAAW,CAACqB,GAAhC;AACH,KAFe,CAAhB;AAIArC,IAAAA,GAAG,CAACsC,oBAAJ,CAAyBN,IAAI,CAACK,GAA9B,EAAmCJ,OAAnC,EACCT,IADD,CACOe,OAAD,IAAa;AACfpB,MAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACsB,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACJ,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BE,CAAhD,CAAV,CAAR;AACH,KAHD,EAICd,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH;;AAEA,WAASc,gBAAT,CAA0BV,IAA1B,EAAgC;AAC7BhC,IAAAA,GAAG,CAAC2C,kBAAJ,CAAuBX,IAAI,CAACK,GAA5B,EACCV,KADD,CACQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAHD;AAKAT,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAAC0B,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACR,GAAN,KAAcL,IAAI,CAACK,GAA3C,CAAV,CAAR;AACH;;AAED,WAASS,oBAAT,CAA8BV,IAA9B,EAAoC;AAChCpC,IAAAA,GAAG,CAAC+C,SAAJ,CAAcX,IAAd,EACCZ,IADD,CACMe,OAAO,IAAI;AACbpB,MAAAA,QAAQ,CAAC,CAACoB,OAAD,EAAU,GAAGrB,KAAb,CAAD,CAAR;AACA8B,MAAAA,cAAc;AACjB,KAJD,EAKCrB,KALD,CAKQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH;;AAED,WAASqB,qBAAT,GAAiC;AAC7B1C,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAED,WAAS2C,sBAAT,GAAkC;AAC9BzC,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH;;AAED,WAAS0C,mBAAT,GAA+B;AAC3BxC,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;;AAED,WAASyC,eAAT,CAAyBpB,IAAzB,EAA+B;AAC3BnB,IAAAA,eAAe,CAACmB,IAAD,CAAf;AACH;;AAED,WAASgB,cAAT,GAA0B;AACtBzC,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,eAAe,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE;AAAjB,KAAD,CAAf;AACH;;AAED,WAASsC,gBAAT,CAA0BjB,IAA1B,EAAgC;AAC5BpC,IAAAA,GAAG,CAACsD,cAAJ,CAAmBlB,IAAnB,EACCZ,IADD,CACM+B,GAAG,IAAI;AACTtC,MAAAA,cAAc,CAACsC,GAAD,CAAd;AACAP,MAAAA,cAAc;AACjB,KAJD,EAKCrB,KALD,CAKQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH;;AAED,WAAS4B,kBAAT,CAA4BpB,IAA5B,EAAkC;AAC9BpC,IAAAA,GAAG,CAACyD,gBAAJ,CAAqBrB,IAArB,EACCZ,IADD,CACM+B,GAAG,IAAI;AACTtC,MAAAA,cAAc,CAACsC,GAAD,CAAd;AACAP,MAAAA,cAAc;AACjB,KAJD,EAKCrB,KALD,CAKQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH;;AAEH,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAIZ,WAAtC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,IAAD;AACI,QAAA,aAAa,EAAEkC,sBADnB;AAEI,QAAA,UAAU,EAAEC,mBAFhB;AAGI,QAAA,YAAY,EAAEF,qBAHlB;AAII,QAAA,WAAW,EAAEG,eAJjB;AAKI,QAAA,UAAU,EAAErB,cALhB;AAMI,QAAA,YAAY,EAAEW,gBANlB;AAOI,QAAA,OAAO,EAAExB;AAPb;AAAA;AAAA;AAAA;AAAA,cAHJ,eAaI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAbJ,EAeKV,sBAAsB,iBACnB,QAAC,gBAAD;AACI,QAAA,MAAM,EAAEA,sBADZ;AAEI,QAAA,OAAO,EAAEwC,cAFb;AAGI,QAAA,YAAY,EAAEK;AAHlB;AAAA;AAAA;AAAA;AAAA,cAhBR,EAuBK/C,qBAAqB,iBAClB,QAAC,eAAD;AACI,QAAA,MAAM,EAAEA,qBADZ;AAEI,QAAA,OAAO,EAAE0C,cAFb;AAGI,QAAA,cAAc,EAAEQ;AAHpB;AAAA;AAAA;AAAA;AAAA,cAxBR,eAgCK,QAAC,aAAD;AACG,QAAA,MAAM,EAAE9C,mBADX;AAEG,QAAA,OAAO,EAAEsC,cAFZ;AAGG,QAAA,UAAU,EAAEF;AAHf;AAAA;AAAA;AAAA;AAAA,cAhCL,eAuCI,QAAC,UAAD;AACI,QAAA,IAAI,EAAElC,YADV;AAEI,QAAA,OAAO,EAAEoC;AAFb;AAAA;AAAA;AAAA;AAAA,cAvCJ,eA4CI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,cAApB;AAAmC,QAAA,KAAK,EAAC,0DAAzC;AAAuD,QAAA,UAAU,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,cA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GArJQ3C,G;;KAAAA,G;AAuJT,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\"; \nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\nfunction App() {\n    \n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({name: \"\", link: \"\"});\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        Promise.all([api.getInitialCards(), api.getUserInfoFromServer()])\n        .then(([dataCards, dataUser]) => {\n            setCards(dataCards);\n            setCurrentUser(dataUser);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((item) => {\n            return item._id === currentUser._id\n        });\n      \n        api.changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            setCards(cards => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n    \n     function handleCardDelete(card) {\n        api.handlerdeleteCards(card._id)\n        .catch((err) => {\n            console.log(err);\n        });\n    \n        setCards(cards => cards.filter((state) => state._id !== card._id))\n    }\n\n    function handleAddPlaceSubmit(item) {\n        api.postCards(item)\n        .then(newCard => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n     \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard({name: \"\", link: \"\"});\n    }\n\n    function handleUpdateUser(item) {\n        api.updateUserData(item)\n        .then(res => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleUpdateAvatar(item) {\n        api.updateUserAvatar(item) \n        .then(res => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n        <div className=\"App page\">\n            <Header />\n\n            <Main \n                onEditProfile={handleEditProfileClick} \n                onAddPlace={handleAddPlaceClick}  \n                onEditAvatar={handleEditAvatarClick} \n                onCardClick={handleCardClick} \n                onCardLike={handleCardLike} \n                onCardDelite={handleCardDelete}\n                onCards={cards}\n            />\n\n            <Footer />\n\n            {isEditProfilePopupOpen &&\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser}\n            />\n            }\n \n            {isEditAvatarPopupOpen &&\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar}\n            />\n            }\n\n     \n             <AddPlacePopup \n                isOpen={isAddPlacePopupOpen} \n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit} \n            />\n           \n\n            <ImagePopup \n                card={selectedCard} \n                onClose={closeAllPopups} \n            />         \n\n            <PopupWithForm name=\"delete-image\" title=\"Вы уверены?\" buttonText=\"Да\" />\n        </div>\n    </CurrentUserContext.Provider>    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}