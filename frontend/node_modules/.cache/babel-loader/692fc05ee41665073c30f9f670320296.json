{"ast":null,"code":"export const BASE_URL = \"http://localhost:3000\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }).then(res => {\n    return res;\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    credentials: 'include'\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }).then(data => data);\n};","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/utils/authUser.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","authorize","credentials","getContent","token","data"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAN2B,GAAvB,CAAL,CAQNO,IARM,CAQAC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD,GAbM,EAcNN,IAdM,CAcAC,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAhBM,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMM,SAAS,GAAG,CAACf,QAAD,EAAWC,KAAX,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCa,IAAAA,WAAW,EAAE,SAFoB;AAGjCZ,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAHwB;AAOjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAP2B,GAAvB,CAAL,CAUNO,IAVM,CAUAC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD,GAfM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMG,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAOhB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASc,KAAM;AAH1B,KAF0B;AAOnCF,IAAAA,WAAW,EAAE;AAPsB,GAAzB,CAAL,CASNR,IATM,CASAC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD,GAdM,EAeNN,IAfM,CAeDW,IAAI,IAAIA,IAfP,CAAP;AAgBD,CAjBM","sourcesContent":["export const BASE_URL = \"http://localhost:3000\";\n\nexport const register = (password, email) => { \n  return fetch(`${BASE_URL}/signup`, { \n    method: 'POST', \n    headers: { \n      'Accept': 'application/json', \n      'Content-Type': 'application/json' \n    }, \n    body: JSON.stringify({password, email}) \n  }) \n  .then((res) => { \n    if (res.ok) { \n      return res.json(); \n    } \n    return Promise.reject(`Ошибка: ${res.status}`); \n  }) \n  .then((res) => { \n    return res; \n  }); \n\n} \n\nexport const authorize = (password, email) => { \n  return fetch(`${BASE_URL}/signin`, { \n    method: 'POST', \n    credentials: 'include',\n    headers: { \n      'Accept': 'application/json', \n      'Content-Type': 'application/json',\n    }, \n    body: JSON.stringify({password, email}) \n  }) \n\n  .then((res) => { \n    if (res.ok) { \n      return res.json(); \n    } \n    return Promise.reject(`Ошибка: ${res.status}`); \n  }); \n\n} \n\nexport const getContent = (token) => { \n  return fetch(`${BASE_URL}/users/me`, { \n    method: 'GET', \n    headers: { \n      'Accept': 'application/json', \n      'Content-Type': 'application/json', \n      'Authorization': `Bearer ${token}`, \n    },\n    credentials: 'include', \n  }) \n  .then((res) => { \n    if (res.ok) { \n      return res.json(); \n    } \n    return Promise.reject(`Ошибка: ${res.status}`); \n  }) \n  .then(data => data); \n} "]},"metadata":{},"sourceType":"module"}