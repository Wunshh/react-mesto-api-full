{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getInitialCards().then(cardData => {\n      setCards(cardData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => {\n      return item._id === currentUser._id;\n    });\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.handlerdeleteCards(card._id).catch(err => {\n      console.log(err);\n    });\n    const newCardsArray = cards.filter(c => c._id !== card._id);\n    setCards(newCardsArray);\n  }\n\n  function handleAddPlaceSubmit(item) {\n    debugger;\n    api.postCards(item).then(newCard => {\n      setCards([newCard, ...cards]);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }\n\n  useEffect(() => {\n    api.getUserInfoFromServer().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n  }\n\n  function handleUpdateUser(item) {\n    api.updateUserData(item).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }\n\n  function handleUpdateAvatar(item) {\n    api.updateUserAvatar(item).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelite: handleCardDelete,\n        onCards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-image\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonText: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TQsXaAKfHRBzQ0ahFU8fMD/rkZo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/mesto-react/src/components/App.js"],"names":["useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","getInitialCards","then","cardData","catch","err","console","log","handleCardLike","card","isLiked","likes","some","item","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","handlerdeleteCards","newCardsArray","filter","handleAddPlaceSubmit","postCards","closeAllPopups","getUserInfoFromServer","res","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateUser","updateUserData","handleUpdateAvatar","updateUserAvatar"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\"; \nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\nfunction App() {\n    \n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({name: \"\", link: \"\"});\n    const [currentUser, setCurrentUser] = useState(\"\");\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        api.getInitialCards()\n        .then(cardData => {\n          setCards(cardData);\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((item) => {\n            return item._id === currentUser._id\n        });\n      \n        api.changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n    \n     function handleCardDelete(card) {\n        api.handlerdeleteCards(card._id)\n        .catch((err) => {\n            console.log(err);\n        });\n    \n        const newCardsArray = cards.filter((c) => c._id !== card._id);\n        setCards(newCardsArray);\n    }\n\n    function handleAddPlaceSubmit(item) {\n        debugger\n        api.postCards(item)\n        .then(newCard => {\n            setCards([newCard, ...cards]);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n\n        closeAllPopups();\n    }\n\n\n    useEffect(() => {\n        api.getUserInfoFromServer()\n        .then(res => {\n            setCurrentUser(res);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n      }, []);\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n     \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard({name: \"\", link: \"\"});\n    }\n\n    function handleUpdateUser(item) {\n        api.updateUserData(item)\n        .then(res => {\n            setCurrentUser(res);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n        closeAllPopups();\n    }\n\n    function handleUpdateAvatar(item) {\n        api.updateUserAvatar(item) \n        .then(res => {\n            setCurrentUser(res);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n        closeAllPopups();\n    }\n\n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n        <div className=\"App page\">\n            <Header />\n\n            <Main \n                onEditProfile={handleEditProfileClick} \n                onAddPlace={handleAddPlaceClick}  \n                onEditAvatar={handleEditAvatarClick} \n                onCardClick={handleCardClick} \n                onCardLike={handleCardLike} \n                onCardDelite={handleCardDelete}\n                onCards={cards}\n            />\n\n            <Footer />\n\n            <EditProfilePopup \n                isOpen={isEditProfilePopupOpen} \n                onClose={closeAllPopups} \n                onUpdateUser={handleUpdateUser}\n            />\n\n            <EditAvatarPopup \n                isOpen={isEditAvatarPopupOpen} \n                onClose={closeAllPopups} \n                onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <AddPlacePopup \n                isOpen={isAddPlacePopupOpen} \n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit} \n            />\n\n            <ImagePopup \n                card={selectedCard} \n                onClose={closeAllPopups} \n            />         \n\n            <PopupWithForm name=\"delete-image\" title=\"Вы уверены?\" buttonText=\"Да\" />\n        </div>\n    </CurrentUserContext.Provider>    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}