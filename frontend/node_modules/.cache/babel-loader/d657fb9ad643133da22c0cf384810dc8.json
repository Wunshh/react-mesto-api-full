{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => rest.loggedIn === true ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 64\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"./login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 101\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","props","loggedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAwC;AAC7D,sBACE,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IAAID,IAAI,CAACE,QAAL,KAAkB,IAAlB,gBAAyB,QAAC,SAAD,OAAeD,KAAf;AAAA,SAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAzB,gBAA8D,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAhG;AAAA;AAAA;AAAA;AAAA,UADF;AAEA,CAHF;;KAAMH,c;AAKN,eAAeA,cAAf","sourcesContent":["import React from 'react';\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...rest  }) => {\n  return (\n    <Route {...rest} render={props => rest.loggedIn === true ? <Component {...props} {...rest} /> : <Redirect to=\"./login\" />} />\n)}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}