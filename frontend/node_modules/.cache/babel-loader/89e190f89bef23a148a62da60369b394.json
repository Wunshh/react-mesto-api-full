{"ast":null,"code":"import _classCallCheck from\"/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('jwt'))}}).then(this._checkResponse);}},{key:\"postCards\",value:function postCards(item){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('jwt'))},body:JSON.stringify({name:item.name,link:item.link})}).then(this._checkResponse);}},{key:\"handlerDeleteCards\",value:function handlerDeleteCards(item){return fetch(\"\".concat(this._url,\"/cards/\").concat(item),{method:'DELETE',headers:{\"Content-Type\":\"application/json\",'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))}}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(item,like){return fetch(\"\".concat(this._url,\"/cards/\").concat(item,\"/likes\"),{method:like?'DELETE':'PUT',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('jwt'))}}).then(this._checkResponse);}},{key:\"getUserInfoFromServer\",value:function getUserInfoFromServer(){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('jwt'))}}).then(this._checkResponse);}},{key:\"updateUserData\",value:function updateUserData(item){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('jwt'))},body:JSON.stringify({name:item.name,about:item.about})}).then(this._checkResponse);}},{key:\"updateUserAvatar\",value:function updateUserAvatar(item){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('jwt'))},body:JSON.stringify({avatar:item.link})}).then(this._checkResponse);}}]);return Api;}();var config={url:\"https://api.last.nomoredomains.work\"};var api=new Api(config);export default api;","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/utils/api.js"],"names":["Api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","localStorage","getItem","then","_checkResponse","item","body","JSON","stringify","name","link","like","about","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n  \n    _checkResponse(res) {\n      if (res.ok) {\n          return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`,\n            },\n        })\n        .then(this._checkResponse)\n    }\n  \n    postCards(item) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`,\n            },\n            body: JSON.stringify({\n              name: item.name,\n              link: item.link,\n            })\n        })\n        .then(this._checkResponse)\n    }\n  \n    handlerDeleteCards(item) {\n      return fetch(`${this._url}/cards/${item}`, {\n          method: 'DELETE',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n          },\n      })\n      .then(this._checkResponse)\n    }\n  \n    changeLikeCardStatus(item, like) {\n      return fetch(`${this._url}/cards/${item}/likes`, {\n          method: like ? 'DELETE' : 'PUT',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`,\n          },\n      })\n      .then(this._checkResponse)\n    }\n  \n    getUserInfoFromServer() {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`,\n            },\n        })\n        .then(this._checkResponse)\n    }\n  \n    updateUserData(item) {\n      return fetch(`${this._url}/users/me`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`,\n          },\n          body: JSON.stringify({\n              name: item.name,\n              about: item.about\n          })\n      })\n      .then(this._checkResponse)\n    }\n  \n    updateUserAvatar(item) {\n      return fetch(`${this._url}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`,\n        },\n        body: JSON.stringify({\n          avatar: item.link,\n        })\n      })\n      .then(this._checkResponse)\n    }\n}\n    \nconst config = {\n    url: \"https://api.last.nomoredomains.work\",\n};\n\nconst api = new Api(config);\n\nexport default api;"]},"metadata":{},"sourceType":"module"}