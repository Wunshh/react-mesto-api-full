{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (password, email) => {\n  debugger;\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }).then(data => {\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  }).catch(err => console.log(err));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","authorize","data","user","localStorage","setItem","jwt","catch","err","console","log","checkToken","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAAEC,QAAF,EAAYC,KAAZ,KAAuB;AAC3C;AACA,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf;AANyB,GAAvB,CAAL,CAQNO,IARM,CAQDC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,EAAR,EAAY;AACR,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAbM,CAAP;AAcH,CAhBM;AAkBP,OAAO,MAAMC,SAAS,GAAG,CAAEf,QAAF,EAAYC,KAAZ,KAAuB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf;AANyB,GAAvB,CAAL,CAQNO,IARM,CAQDC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,EAAR,EAAY;AACR,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAbM,EAcNN,IAdM,CAcAQ,IAAD,IAAU;AACZ,QAAIA,IAAI,CAACC,IAAT,EAAc;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACI,GAAjC;AACA,aAAOJ,IAAP;AACD,KAHD,MAGO;AACL;AACD;AACJ,GArBM,EAsBNK,KAtBM,CAsBAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAtBP,CAAP;AAuBH,CAxBM;AA0BP,OAAO,MAAMG,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOxB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASsB,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNlB,IARM,CAQDC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EARN,EASNH,IATM,CASDQ,IAAI,IAAIA,IATP,CAAP;AAUH,CAXM","sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = ( password, email ) => {\n    debugger\n    return fetch(`${BASE_URL}/signup`, {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({ password, email })\n    })\n    .then(res => {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    });\n}\n\nexport const authorize = ( password, email ) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({ password, email })\n    })\n    .then(res => {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    })\n    .then((data) => {\n        if (data.user){\n          localStorage.setItem('jwt', data.jwt);\n          return data;\n        } else {\n          return;\n        }\n    })\n    .catch(err => console.log(err))\n}\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n}"]},"metadata":{},"sourceType":"module"}