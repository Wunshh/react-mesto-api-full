{"ast":null,"code":"var _jsxFileName = \"/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport NavBar from \"./NavBar.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport * as authUser from \"../utils/authUser.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport imageResolve from \"../images/resolve.svg\";\nimport imageError from \"../images/error.svg\";\nimport DeleteCardPopup from \"./DeleteCardPopup.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  const [selectedCardDelet, setSelectedCardDelete] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [userData, setUserData] = useState(\"email\");\n  const [message, setMessage] = useState({\n    image: \"\",\n    text: \"\"\n  });\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const history = useHistory;\n  useEffect(() => {\n    Promise.all([api.getInitialCards(), api.getUserInfoFromServer()]).then(([dataCards, dataUser]) => {\n      setCards(dataCards);\n      setCurrentUser(dataUser);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => {\n      return item._id === currentUser._id;\n    });\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleDeleteCardClick(card) {\n    setSelectedCardDelete(card);\n    setIsDeletePopupOpen(true);\n  }\n\n  function handleAddPlaceSubmit(item) {\n    api.postCards(item).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleMenuClick() {\n    setIsMenuOpen(true);\n  }\n\n  function handleClosePopupKeyDown(evt) {\n    if (evt.key === \"Escape\") {\n      closeAllPopups();\n    }\n  }\n\n  function handleClosePopupOverlayClick(evt) {\n    if (evt.target.classList.contains(\"popup\")) {\n      closeAllPopups();\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n    setIsMenuOpen(false);\n    setInfoTooltipOpen(false);\n    setMessage({\n      image: \"\",\n      text: \"\"\n    });\n  }\n\n  function handleUpdateUser(item) {\n    api.updateUserData(item).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(item) {\n    api.updateUserAvatar(item).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      authUser.getContent(jwt).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          setUserData(res.data.email);\n          history.push('/');\n        }\n      }).catch(err => console.log(err));\n    }\n  }, []);\n\n  const onRegister = ({\n    password,\n    email\n  }) => {\n    return authUser.register(password, email).then(res => {\n      if (!res || res.statusCode === 400) {\n        setMessage({\n          image: imageError,\n          text: \"Что-то пошло не так! Попробуйте ещё раз.\"\n        });\n        setInfoTooltipOpen(true);\n      }\n\n      if (res) {\n        setMessage({\n          image: imageResolve,\n          text: \"Вы успешно зарегистрировались!\"\n        });\n        setInfoTooltipOpen(true);\n        return res;\n      }\n    });\n  };\n\n  const onLogin = ({\n    password,\n    email\n  }) => {\n    return authUser.authorize(password, email).then(res => {\n      if (res) {\n        setLoggedIn(true);\n        localStorage.setItem('jwt', res);\n        setMessage({\n          image: imageResolve,\n          text: \"Данные введены корректно!\"\n        });\n        setInfoTooltipOpen(true);\n        history.push('/');\n      }\n\n      if (!res) {\n        setMessage({\n          image: imageError,\n          text: \"Что-то пошло не так! Попробуйте ещё раз.\"\n        });\n        setInfoTooltipOpen(true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this) && /*#__PURE__*/_jsxDEV(Header, {\n          title: \"Выйти\",\n          isOpen: isMenuOpen,\n          onMenuClick: handleMenuClick,\n          onClose: closeAllPopups,\n          userData: userData,\n          onSignOut: onSignOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          userData: userData,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelite: handleDeleteCardClick,\n          onCards: cards,\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-up\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            title: \"Войти\",\n            url: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: onRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-in\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            title: \"Регистрация\",\n            url: \"/sign-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: onLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        message: message,\n        onCloseKeyDown: handleClosePopupKeyDown,\n        onCloseOverlayClick: handleClosePopupOverlayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        onCloseKeyDown: handleClosePopupKeyDown,\n        onCloseOverlayClick: handleClosePopupOverlayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        onCloseKeyDown: handleClosePopupKeyDown,\n        onCloseOverlayClick: handleClosePopupOverlayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        onCloseKeyDown: handleClosePopupKeyDown,\n        onCloseOverlayClick: handleClosePopupOverlayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups,\n        onCloseKeyDown: handleClosePopupKeyDown,\n        onCloseOverlayClick: handleClosePopupOverlayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeletePopupOpen,\n        onClose: closeAllPopups,\n        onCloseKeyDown: handleClosePopupKeyDown,\n        onCloseOverlayClick: handleClosePopupOverlayClick,\n        onSubmit: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hJKg9AahRU8pCLh8ZSDRSNW5TdQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/valentinadavydova/Documents/GitHub/react-mesto-auth/src/components/App.js"],"names":["useState","useEffect","Route","Switch","Redirect","useHistory","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","NavBar","ProtectedRoute","authUser","InfoTooltip","DeleteCardPopup","App","loggedIn","setLoggedIn","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isMenuOpen","setIsMenuOpen","selectedCard","setSelectedCard","name","link","selectedCardDelet","setSelectedCardDelete","currentUser","setCurrentUser","cards","setCards","userData","setUserData","message","setMessage","image","text","isInfoTooltipOpen","setInfoTooltipOpen","history","Promise","all","getInitialCards","getUserInfoFromServer","then","dataCards","dataUser","catch","err","console","log","handleCardLike","card","isLiked","likes","some","item","_id","changeLikeCardStatus","newCard","map","c","handleDeleteCardClick","handleAddPlaceSubmit","postCards","closeAllPopups","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleMenuClick","handleClosePopupKeyDown","evt","key","handleClosePopupOverlayClick","target","classList","contains","handleUpdateUser","updateUserData","res","handleUpdateAvatar","updateUserAvatar","jwt","localStorage","getItem","getContent","data","email","push","onRegister","password","register","statusCode","imageError","imageResolve","onLogin","authorize","setItem","onSignOut","removeItem","handleCardDelete"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\"; \nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport NavBar from \"./NavBar.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport * as authUser from \"../utils/authUser.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport imageResolve from \"../images/resolve.svg\";\nimport imageError from \"../images/error.svg\";\nimport DeleteCardPopup from \"./DeleteCardPopup.js\";\n \nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({name: \"\", link: \"\"});\n    const [selectedCardDelet, setSelectedCardDelete] = useState(null);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [userData, setUserData] = useState(\"email\");\n    const [message, setMessage] = useState({ image: \"\", text: \"\" });\n    const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n    const history = useHistory;\n\n\n    useEffect(() => {\n        Promise.all([api.getInitialCards(), api.getUserInfoFromServer()])\n        .then(([dataCards, dataUser]) => {\n            setCards(dataCards);\n            setCurrentUser(dataUser);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((item) => {\n            return item._id === currentUser._id\n        });\n      \n        api.changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            setCards(cards => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleDeleteCardClick(card) {\n        setSelectedCardDelete(card);\n        setIsDeletePopupOpen(true);\n    }\n\n    function handleAddPlaceSubmit(item) {\n        api.postCards(item)\n        .then(newCard => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n     \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleMenuClick() {\n        setIsMenuOpen(true);\n    }\n\n    function handleClosePopupKeyDown(evt) {\n        if(evt.key === \"Escape\") {\n            closeAllPopups();\n        }\n    }\n\n    function handleClosePopupOverlayClick(evt) {\n        if(evt.target.classList.contains(\"popup\")) {\n            closeAllPopups();\n        }\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsDeletePopupOpen(false);\n        setSelectedCard({name: \"\", link: \"\"});\n        setIsMenuOpen(false);\n        setInfoTooltipOpen(false);\n        setMessage({ image: \"\", text: \"\" })\n    }\n\n    function handleUpdateUser(item) {\n        api.updateUserData(item)\n        .then(res => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleUpdateAvatar(item) {\n        api.updateUserAvatar(item) \n        .then(res => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            authUser.getContent(jwt)\n            .then((res) => {\n                if (res) {\n                  setLoggedIn(true);\n                  setUserData(res.data.email);\n                  history.push('/');\n                }\n            })\n            .catch(err => console.log(err));\n        }\n    }, []);\n    \n\n    const onRegister = ({ password, email }) => {\n        return authUser.register( password, email )\n        .then((res) => {\n            if(!res || res.statusCode === 400){\n                setMessage({ image: imageError, text: \"Что-то пошло не так! Попробуйте ещё раз.\" });\n                setInfoTooltipOpen(true);\n            }\n            if(res) {\n                setMessage({ image: imageResolve, text: \"Вы успешно зарегистрировались!\" });\n                setInfoTooltipOpen(true);\n                return res;\n            }\n        });\n    }\n\n    const onLogin = ({ password, email }) => {\n        return authUser.authorize( password, email )\n        .then((res) => {\n            if (res) {\n                setLoggedIn(true);\n                localStorage.setItem('jwt', res);\n                setMessage({ image: imageResolve, text: \"Данные введены корректно!\" });\n                setInfoTooltipOpen(true);\n                history.push('/');\n            }\n            if(!res) {\n                setMessage({ image: imageError, text: \"Что-то пошло не так! Попробуйте ещё раз.\" });\n                setInfoTooltipOpen(true);\n            }\n       })\n       .catch((err) => {\n        console.log(err);\n       });\n    }\n\n    const onSignOut = () => {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n    }\n\n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n        <div className=\"App page\">\n            <Route>\n                {loggedIn ? <Redirect to=\"/\" />  &&           \n                <Header \n                    title={\"Выйти\"} \n                    isOpen={isMenuOpen} \n                    onMenuClick={handleMenuClick}\n                    onClose={closeAllPopups} \n                    userData={userData}\n                    onSignOut={onSignOut}\n                /> \n                : <Redirect to=\"/sign-up\" \n            />}\n            </Route>\n\n            <Switch>\n                <ProtectedRoute \n                    exact\n                    path=\"/\"\n                    loggedIn={loggedIn}\n                    userData={userData}\n                    onEditProfile={handleEditProfileClick} \n                    onAddPlace={handleAddPlaceClick}  \n                    onEditAvatar={handleEditAvatarClick} \n                    onCardClick={handleCardClick} \n                    onCardLike={handleCardLike} \n                    onCardDelite={handleDeleteCardClick}\n                    onCards={cards}\n                    component={Main} \n                />     \n\n                <Route exact path=\"/sign-up\">\n                    <NavBar \n                    title={\"Войти\"}\n                    url={\"/sign-in\"}\n                    />\n                    <Register onRegister={onRegister} />\n                </Route>\n\n                <Route exact path=\"/sign-in\">\n                    <NavBar \n                    title={\"Регистрация\"}\n                    url={\"/sign-up\"}\n                    />\n                    <Login onLogin={onLogin} />\n                </Route>\n\n            </Switch>\n\n            <InfoTooltip \n                isOpen={isInfoTooltipOpen}\n                onClose={closeAllPopups}\n                message={message}\n                onCloseKeyDown={handleClosePopupKeyDown}\n                onCloseOverlayClick={handleClosePopupOverlayClick}\n            />\n\n            <Footer />\n\n            <EditProfilePopup \n                isOpen={isEditProfilePopupOpen} \n                onClose={closeAllPopups} \n                onUpdateUser={handleUpdateUser}\n                onCloseKeyDown={handleClosePopupKeyDown}\n                onCloseOverlayClick={handleClosePopupOverlayClick}\n            />\n\n            <EditAvatarPopup \n                isOpen={isEditAvatarPopupOpen} \n                onClose={closeAllPopups} \n                onUpdateAvatar={handleUpdateAvatar}\n                onCloseKeyDown={handleClosePopupKeyDown}\n                onCloseOverlayClick={handleClosePopupOverlayClick}\n            />\n\n            <AddPlacePopup \n                isOpen={isAddPlacePopupOpen} \n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n                onCloseKeyDown={handleClosePopupKeyDown}\n                onCloseOverlayClick={handleClosePopupOverlayClick}\n            />\n\n            <ImagePopup \n                card={selectedCard} \n                onClose={closeAllPopups} \n                onCloseKeyDown={handleClosePopupKeyDown}\n                onCloseOverlayClick={handleClosePopupOverlayClick}\n            />         \n\n            <DeleteCardPopup \n                isOpen={isDeletePopupOpen}\n                onClose={closeAllPopups}\n                onCloseKeyDown={handleClosePopupKeyDown}\n                onCloseOverlayClick={handleClosePopupOverlayClick}\n                onSubmit={handleCardDelete}\n            />\n        </div>\n    </CurrentUserContext.Provider> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}